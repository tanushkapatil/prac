ASSIGNMENT 5

Tables:
mysql> select * from Customers_012;
+-------------+---------+------------+-------------+--------------+
| customer_id | name	| dob    	| city    	| account_type |
+-------------+---------+------------+-------------+--------------+
|       	1 | Alice   | 1990-05-14 | New York	| Savings  	|
|       	2 | Bob 	| 1985-08-22 | Los Angeles | Current  	|
|       	3 | Charlie | 1992-11-02 | Chicago 	| Savings  	|
|       	4 | David   | 1988-03-10 | Houston 	| Current  	|
+-------------+---------+------------+-------------+--------------+

mysql> select * from Branches_012;
+-----------+-----------------+-------------+
| branch_id | branch_name 	| city    	|
+-----------+-----------------+-------------+
|     	1 | NY Downtown 	| New York	|
|     	2 | LA West     	| Los Angeles |
|     	3 | Chicago Central | Chicago 	|
+-----------+-----------------+-------------+

mysql> select * from Accounts_012;
+------------+-------------+----------+--------------+-----------+
| account_id | customer_id | balance  | account_type | branch_id |
+------------+-------------+----------+--------------+-----------+
|    	101 |       	1 | 20000.00 | Savings  	|     	1 |
|    	102 |       	2 | 50000.00 | Current  	|     	2 |
|    	103 |       	3 | 10000.00 | Savings  	|     	3 |
|    	104 |       	4 | 75000.00 | Current  	|     	1 |
+------------+-------------+----------+--------------+-----------+

mysql> select * from Transactions_012;
+----------------+------------+---------+------------------+------------------+
| transaction_id | account_id | amount  | transaction_type | transaction_date |
+----------------+------------+---------+------------------+------------------+
|          	1 |    	101 | 5000.00 | Deposit      	| 2024-03-01   	|
|          	2 |    	102 | 2000.00 | Withdrawal   	| 2024-02-15   	|
|          	3 |    	103 | 3000.00 | Deposit      	| 2024-01-10   	|
|          	4 |    	104 |  500.00 | Transfer     	| 2024-02-20   	|
+----------------+------------+---------+------------------+------------------+

mysql> select * from Loans_012;
+---------+-------------+-----------+-----------+----------+
| loan_id | customer_id | amount	| loan_type | status   |
+---------+-------------+-----------+-----------+----------+
|   	1 |       	1 | 150000.00 | Home  	| Approved |
|   	2 |       	2 |  50000.00 | Car   	| Pending  |
|   	3 |       	3 |  20000.00 | Personal  | Approved |
+---------+-------------+-----------+-----------+----------+

1. Retrieve the total balance for each account type.
mysql> SELECT account_type, SUM(balance) AS total_balance
	-> FROM Accounts_012
	-> GROUP BY account_type;
+--------------+---------------+
| account_type | total_balance |
+--------------+---------------+
| Savings  	|  	30000.00 |
| Current  	| 	125000.00 |
+--------------+---------------+
2. Count the number of accounts in each branch.
mysql> SELECT branch_id, COUNT(*) AS account_count
	-> FROM Accounts_012
	-> GROUP BY branch_id;
+-----------+---------------+
| branch_id | account_count |
+-----------+---------------+
|     	1 |         	2 |
|     	2 |         	1 |
|     	3 |         	1 |
+-----------+---------------+
3. Find the number of customers in each city.
mysql> SELECT city, COUNT(*) AS customer_count
	-> FROM Customers_012
	-> GROUP BY city;
+-------------+----------------+
| city    	| customer_count |
+-------------+----------------+
| New York	|          	1 |
| Los Angeles |          	1 |
| Chicago 	|          	1 |
| Houston 	|          	1 |
+-------------+----------------+
4. Show the number of loans approved per loan type.
mysql> SELECT loan_type, COUNT(*) AS approved_loans
	-> FROM Loans_012
	-> WHERE status = 'Approved'
	-> GROUP BY loan_type;
+-----------+----------------+
| loan_type | approved_loans |
+-----------+----------------+
| Home  	|          	1 |
| Personal  |          	1 |
+-----------+----------------+

5. Find the total number of transactions for each transaction type.
mysql> SELECT transaction_type, COUNT(*) AS total_transactions
	-> FROM Transactions_012
	-> GROUP BY transaction_type;
+------------------+--------------------+
| transaction_type | total_transactions |
+------------------+--------------------+
| Deposit      	|              	2 |
| Withdrawal   	|              	1 |
| Transfer     	|              	1 |
+------------------+--------------------+

6. Show the customers who do not have a loan.
mysql> SELECT * FROM Customers_012
	-> WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM Loans_012);
+-------------+-------+------------+---------+--------------+
| customer_id | name  | dob    	| city	| account_type |
+-------------+-------+------------+---------+--------------+
|       	4 | David | 1988-03-10 | Houston | Current  	|
+-------------+-------+------------+---------+--------------+

7. Retrieve customers who have accounts in more than one branch.
mysql> SELECT customer_id
	-> FROM Accounts_012
	-> GROUP BY customer_id
	-> HAVING COUNT(DISTINCT branch_id) > 1;
Empty set 
8. Find all accounts that have not had any deposits in the last 3 months.
mysql> SELECT account_id FROM Accounts_012
	-> WHERE account_id NOT IN (
	-> 	SELECT DISTINCT account_id FROM Transactions_012
	-> 	WHERE transaction_type = 'Deposit'
	-> 	AND transaction_date >= CURDATE() - INTERVAL 3 MONTH);
+------------+
| account_id |
+------------+
|    	101 |
|    	102 |
|    	103 |
|    	104 |
+------------+

9. Display the account types where the total balance is below ?25,000.
mysql> SELECT account_type FROM Accounts_012
	-> GROUP BY account_type
	-> HAVING SUM(balance) < 25000;
Empty set 

10. Find the total balance per account type where the balance is above ?50,000.
mysql> SELECT account_type, SUM(balance) AS total_balance
	-> FROM Accounts_012
	-> GROUP BY account_type
	-> HAVING SUM(balance) > 50000;
+--------------+---------------+
| account_type | total_balance |
+--------------+---------------+
| Current  	| 	125000.00 |
+--------------+---------------+




11. Retrieve the count of transactions made on dates where more than 5 transactions occurred.
mysql> SELECT transaction_date, COUNT(*) AS transaction_count
	-> FROM Transactions_012
	-> GROUP BY transaction_date
	-> HAVING COUNT(*) > 5;

Output: Empty set 

12. Find the top 3 transaction days with the highest total transaction amount.
mysql> SELECT transaction_date, SUM(amount) AS total_amount
	-> FROM Transactions_012
	-> GROUP BY transaction_date
	-> ORDER BY total_amount DESC
	-> LIMIT 3;
+------------------+--------------+
| transaction_date | total_amount |
+------------------+--------------+
| 2024-03-01   	|  	5000.00 |
| 2024-01-10   	|  	3000.00 |
| 2024-02-15   	|  	2000.00 |
+------------------+--------------+

13. Find customers who have a loan but no account in the bank.
mysql> SELECT * FROM Customers_012
	-> WHERE customer_id IN (SELECT DISTINCT customer_id FROM Loans_012)
	-> AND customer_id NOT IN (SELECT DISTINCT customer_id FROM   Accounts_012);

Output: Empty set 

