ASSIGNMENT 8

Collection Teachers - [
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce3'), Tname: 'Praveen',
dno: 102, dname: 'IT', experience: 7,
salary: 12000,
date_of_joining: '2015-08-22'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce4'), Tname: 'Amit',
dno: 103, dname: 'E&TC', experience: 9,
salary: 11000,
date_of_joining: '2013-04-18'
}
]

Collection Students - [
{
_id: ObjectId('67e907fee8478f1435cb0ce5'), Sname: 'Alice',
roll_no: 1, class: 'SE'
},
{
_id: ObjectId('67e907fee8478f1435cb0ce6'), Sname: 'Bob',
roll_no: 2, class: 'TE'
},
{
_id: ObjectId('67e907fee8478f1435cb0ce7'), Sname: 'xyz',
roll_no: 3, class: 'BE'
}
]

3. Find the information about all teachers
[
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce3'), Tname: 'Praveen',
dno: 102, dname: 'IT', experience: 7,
salary: 12000,
date_of_joining: '2015-08-22'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce4'), Tname: 'Amit',
dno: 103, dname: 'E&TC', experience: 9,
salary: 11000,
date_of_joining: '2013-04-18'
}
]

4. Find the information about all teachers in Computer Department.

db.Teachers.find({ dname: "Computer" }).pretty()

[
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
}
]

5. Find the information about all teachers of computer,IT,and e&TC department
db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] } }).pretty() [
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce3'), Tname: 'Praveen',
dno: 102, dname: 'IT', experience: 7,
salary: 12000,
date_of_joining: '2015-08-22'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce4'), Tname: 'Amit',
dno: 103,
dname: 'E&TC', experience: 9,
salary: 11000,
date_of_joining: '2013-04-18'
}
]

6. Find the information about all teachers of computer,IT,and E&TC department having salary greater than or equal to 10000/-

db.Teachers.find({ dname: { $in: ["Computer", "IT", "E&TC"] }, salary: { $gte: 10000 } }).pretty() [
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce3'), Tname: 'Praveen',
dno: 102, dname: 'IT', experience: 7,
salary: 12000,
date_of_joining: '2015-08-22'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce4'), Tname: 'Amit',
dno: 103, dname: 'E&TC', experience: 9,
salary: 11000,
date_of_joining: '2013-04-18'
}
]

7. Find the student information having roll_no = 2 or Sname=xyz
db.Students.find({ $or: [{ roll_no: 2 }, { Sname: "xyz" }] }).pretty()
[
{
_id: ObjectId('67e907fee8478f1435cb0ce6'), Sname: 'Bob',
roll_no: 2, class: 'TE'
},
{
_id: ObjectId('67e907fee8478f1435cb0ce7'), Sname: 'xyz',
roll_no: 3, class: 'BE'
}
]

8. Update the experience of teacher-praveen to 10years, if the entry is not available in database
consider the entry as new entry.
db.Teachers.updateOne(
{ Tname: "Praveen" },
{ $set: { experience: 10 } },
{ upsert: true }
)


9. Update the deparment of all the teachers working in IT deprtment to COMP
db.Teachers.updateMany(
{ dname: "IT" },
{ $set: { dname: "COMP" } }
)
[
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce3'), Tname: 'Praveen',
dno: 102,
dname: 'COMP', experience: 10,
salary: 12000,
date_of_joining: '2015-08-22'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce4'), Tname: 'Amit',
dno: 103, dname: 'E&TC', experience: 9,
salary: 11000,
date_of_joining: '2013-04-18'
}
]

10. find the teachers name and their experience from teachers collection

db.Teachers.find({}, { Tname: 1, experience: 1, _id: 0 })

[
{ Tname: 'Rahul', experience: 5 },
{ Tname: 'Praveen', experience: 10 },
{ Tname: 'Amit', experience: 9 }
]

11. Using Save() method insert one entry in department collection
db.Department.save({ dno: 104, dname: "Mechanical" }) TypeError: db.Department.save is not a function

12. Using Save() method change the dept of teacher praveen to IT
db.Teachers.save({ Tname: "Praveen", dno: 102, dname: "IT", experience: 10, salary: 12000, date_of_joining: "2015-08-22" })
TypeError: db.Teachers.save is not a function

13. Delete all the doccuments from teachers collection having IT dept.
db.Teachers.deleteMany({ dname: "IT" })

14. display with pretty() method, the first 3 doccuments in teachers collection in ascending order
db.Teachers.find().sort({ Tname: 1 }).limit(3).pretty()

[
{
_id: ObjectId('67e907ede8478f1435cb0ce4'), Tname: 'Amit',
dno: 103, dname: 'E&TC', experience: 9,
salary: 11000,
date_of_joining: '2013-04-18'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce3'), Tname: 'Praveen',
dno: 102, dname: 'COMP', experience: 10,
salary: 12000,
date_of_joining: '2015-08-22'
},
{
_id: ObjectId('67e907ede8478f1435cb0ce2'), Tname: 'Rahul',
dno: 101,
dname: 'Computer', experience: 5,
salary: 15000,
date_of_joining: '2018-06-12'
}
]
