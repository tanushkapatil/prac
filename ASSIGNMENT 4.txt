ASSIGNMENT 4
Tables:

mysql> select * from Customers_012;
+-------------+---------------+------------------------+-------------+------+
| customer_id | name      	| email              	| city    	| age  |
+-------------+---------------+------------------------+-------------+------+
|       	1 | John Doe  	| johndoe@gmail.com  	| New York	|   28 |
|       	2 | Jane Smith	| janesmith@yahoo.com	| Los Angeles |   34 |
|       	3 | Alice Brown   | alicebrown@gmail.com   | Chicago 	|   45 |
|       	4 | Bob White 	| bobwhite@hotmail.com   | Los Angeles |   22 |
|       	5 | Charlie Green | charliegreen@gmail.com | New York	|   38 |
+-------------+---------------+------------------------+-------------+------+

mysql> select * from Order_Items_012;
+---------------+----------+------------+----------+----------+
| order_item_id | order_id | product_id | quantity | subtotal |
+---------------+----------+------------+----------+----------+
|         	1 |    	1 |      	1 |    	1 |   799.99 |
|         	2 |    	1 |      	2 |    	1 |	29.99 |
|         	3 |    	2 |      	3 |    	3 |	59.97 |
|         	4 |    	3 |      	4 |    	1 |	99.99 |
|         	5 |    	4 |      	6 |    	1 |	39.99 |
|         	6 |    	5 |      	1 |    	1 |   799.99 |
|         	7 |    	5 |      	5 |    	1 |   499.99 |
+---------------+----------+------------+----------+----------+

mysql> select * from Orders_012;
+----------+-------------+------------+--------------+-----------+
| order_id | customer_id | order_date | total_amount | status	|
+----------+-------------+------------+--------------+-----------+
|    	1 |       	1 | 2024-01-15 |   	250.00 | Completed |
|    	2 |       	2 | 2024-02-05 |   	500.00 | Pending   |
|    	3 |       	3 | 2024-01-20 |   	150.00 | Completed |
|    	4 |       	4 | 2024-02-10 |    	75.00 | Cancelled |
|    	5 |       	5 | 2024-01-25 |  	1200.00 | Completed |
+----------+-------------+------------+--------------+-----------+

mysql> select * from Products_012;
+------------+----------------+-------------+--------+-------+
| product_id | name       	| category	| price  | stock |
+------------+----------------+-------------+--------+-------+
|      	1 | Laptop 15" 	| Electronics | 799.99 |	10 |
|      	2 | Wireless Mouse | Electronics |  29.99 |	50 |
|      	3 | T-shirt    	| Clothing	|  19.99 |   100 |
|      	4 | Headphones 	| Electronics |  99.99 |	20 |
|      	5 | Tablet 10" 	| Electronics | 499.99 |	15 |
|      	6 | Jeans      	| Clothing	|  39.99 |	30 |
|      	7 | Smartphone 	| Electronics | 299.99 | 	0 |
|      	8 | Jacket     	| Clothing	|  59.99 |	40 |
+------------+----------------+-------------+--------+-------+

1. Find the total amount spent by customer ID 3 (sum of all their orders).
mysql> SELECT SUM(total_amount) AS total_spent
	-> FROM Orders_012
	-> WHERE customer_id = 3;

output:
+-------------+
| total_spent |
+-------------+
|  	150.00 |
+-------------+

2. Find the total revenue generated from all orders.
mysql> SELECT SUM(total_amount) AS total_revenue FROM Orders_012;

output:
+---------------+
| total_revenue |
+---------------+
|   	2175.00 |
+---------------+

3. Calculate the stock value (price   stock) for each product.
mysql> SELECT product_id, name, (price * stock) AS stock_value
	-> FROM Products_012;

output:
+------------+----------------+-------------+
| product_id | name       	| stock_value |
+------------+----------------+-------------+
|      	1 | Laptop 15" 	| 	7999.90 |
|      	2 | Wireless Mouse | 	1499.50 |
|      	3 | T-shirt    	| 	1999.00 |
|      	4 | Headphones 	| 	1999.80 |
|      	5 | Tablet 10" 	| 	7499.85 |
|      	6 | Jeans      	| 	1199.70 |
|      	7 | Smartphone 	|    	0.00 |
|      	8 | Jacket     	| 	2399.60 |
+------------+----------------+-------------+

4. Retrieve customers who are above 30 years old and live in "New York".
mysql> SELECT * FROM Customers_012  WHERE age > 30 AND city = 'New York';

output:
+-------------+---------------+------------------------+----------+------+
| customer_id | name      	| email              	| city 	| age  |
+-------------+---------------+------------------------+----------+------+
|       	5 | Charlie Green | charliegreen@gmail.com | New York |   38 |
+-------------+---------------+------------------------+----------+------+

5. Find customers who either live in "Los Angeles" or have placed an order worth more than $500.
mysql> SELECT * FROM Customers_012  WHERE city = 'Los Angeles' 	OR customer_id IN (SELECT customer_id FROM Orders_012 WHERE total_amount > 500);

+-------------+---------------+------------------------+-------------+------+
| customer_id | name      	| email              	| city    	| age  |
+-------------+---------------+------------------------+-------------+------+
|       	2 | Jane Smith	| janesmith@yahoo.com	| Los Angeles |   34 |
|       	4 | Bob White 	| bobwhite@hotmail.com   | Los Angeles |   22 |
|       	5 | Charlie Green | charliegreen@gmail.com | New York	|   38 |
+-------------+---------------+------------------------+-------------+------+

6. List products that are in stock but cost less than $50.
mysql> SELECT * FROM Products_012
	-> WHERE stock > 0 AND price < 50;
+------------+----------------+-------------+-------+-------+
| product_id | name       	| category	| price | stock |
+------------+----------------+-------------+-------+-------+
|      	2 | Wireless Mouse | Electronics | 29.99 |	50 |
|      	3 | T-shirt    	| Clothing	| 19.99 |   100 |
|      	6 | Jeans      	| Clothing	| 39.99 |	30 |
+------------+----------------+-------------+-------+-------+

7. Find Products That Have Less Than 5 Items in Stock
mysql> SELECT * FROM Products_012
	-> WHERE stock < 5;
+------------+------------+-------------+--------+-------+
| product_id | name   	| category	| price  | stock |
+------------+------------+-------------+--------+-------+
|      	7 | Smartphone | Electronics | 299.99 | 	0 |
+------------+------------+-------------+--------+-------+

8. Find orders that are not completed (status is not 'Completed').
mysql> SELECT * FROM Orders_012
	-> WHERE status <> 'Completed';
+----------+-------------+------------+--------------+-----------+
| order_id | customer_id | order_date | total_amount | status	|
+----------+-------------+------------+--------------+-----------+
|    	2 |       	2 | 2024-02-05 |   	500.00 | Pending   |
|    	4 |       	4 | 2024-02-10 |    	75.00 | Cancelled |
+----------+-------------+------------+--------------+-----------+

9. Find products that are out of stock or belong to the "Electronics" category.
mysql> SELECT * FROM Products_012
	-> WHERE stock = 0 OR category = 'Electronics';
+------------+----------------+-------------+--------+-------+
| product_id | name       	| category	| price  | stock |
+------------+----------------+-------------+--------+-------+
|      	1 | Laptop 15" 	| Electronics | 799.99 |	10 |
|      	2 | Wireless Mouse | Electronics |  29.99 |	50 |
|      	4 | Headphones 	| Electronics |  99.99 |	20 |
|      	5 | Tablet 10" 	| Electronics | 499.99 |	15 |
|      	7 | Smartphone 	| Electronics | 299.99 | 	0 |
+------------+----------------+-------------+--------+-------+

10. List all email addresses that belong to Gmail.
mysql> SELECT email FROM Customers_012  WHERE email LIKE '%@gmail.com';
+------------------------+
| email              	|
+------------------------+
| johndoe@gmail.com  	|
| alicebrown@gmail.com   |
| charliegreen@gmail.com |

11. Find product names containing the word "Phone".
mysql> SELECT * FROM Products_012
	-> WHERE name LIKE '%Phone%';
+------------+------------+-------------+--------+-------+
| product_id | name   	| category	| price  | stock |
+------------+------------+-------------+--------+-------+
|      	4 | Headphones | Electronics |  99.99 |	20 |
|      	7 | Smartphone | Electronics | 299.99 | 	0 |
+------------+------------+-------------+--------+-------+

12. Find customers whose names have exactly 5 characters.
mysql> SELECT * FROM Customers_012
	-> WHERE LENGTH(name) = 5;
Empty set

13. Find Products That Have "Laptop" or "Tablet" in Their Name
mysql> SELECT * FROM Products_012
	-> WHERE name LIKE '%Laptop%' OR name LIKE '%Tablet%';
+------------+------------+-------------+--------+-------+
| product_id | name   	| category	| price  | stock |
+------------+------------+-------------+--------+-------+
|      	1 | Laptop 15" | Electronics | 799.99 |	10 |
|      	5 | Tablet 10" | Electronics | 499.99 |	15 |
+------------+------------+-------------+--------+-------+

14. Retrieve orders placed in the year 2024.
mysql> SELECT * FROM Orders_012
	-> WHERE YEAR(order_date) = 2024;
+----------+-------------+------------+--------------+-----------+
| order_id | customer_id | order_date | total_amount | status	|
+----------+-------------+------------+--------------+-----------+
|    	1 |       	1 | 2024-01-15 |   	250.00 | Completed |
|    	2 |       	2 | 2024-02-05 |   	500.00 | Pending   |
|    	3 |       	3 | 2024-01-20 |   	150.00 | Completed |
|    	4 |       	4 | 2024-02-10 |    	75.00 | Cancelled |
|    	5 |       	5 | 2024-01-25 |  	1200.00 | Completed |
+----------+-------------+------------+--------------+-----------+

15. Find customers who live in "New York", "Los Angeles", or "Chicago".
mysql> SELECT * FROM Customers_012
	-> WHERE city IN ('New York', 'Los Angeles', 'Chicago');
+-------------+---------------+------------------------+-------------+------+
| customer_id | name      	| email              	| city    	| age  |
+-------------+---------------+------------------------+-------------+------+
|       	1 | John Doe  	| johndoe@gmail.com  	| New York	|   28 |
|       	2 | Jane Smith	| janesmith@yahoo.com	| Los Angeles |   34 |
|       	3 | Alice Brown   | alicebrown@gmail.com   | Chicago 	|   45 |
|       	4 | Bob White 	| bobwhite@hotmail.com   | Los Angeles |   22 |
|       	5 | Charlie Green | charliegreen@gmail.com | New York	|   38 |
+-------------+---------------+------------------------+-------------+------+

16. List products that do not belong to the 'Electronics' or 'Clothing' categories.
mysql> SELECT * FROM Products_012
	-> WHERE category NOT IN ('Electronics', 'Clothing');
Empty set 

17. Find orders placed by customers with IDs 1, 3, or 5.
mysql> SELECT * FROM Orders_012
	-> WHERE customer_id IN (1, 3, 5);
+----------+-------------+------------+--------------+-----------+
| order_id | customer_id | order_date | total_amount | status	|
+----------+-------------+------------+--------------+-----------+
|    	1 |       	1 | 2024-01-15 |   	250.00 | Completed |
|    	3 |       	3 | 2024-01-20 |   	150.00 | Completed |
|    	5 |       	5 | 2024-01-25 |  	1200.00 | Completed |
+----------+-------------+------------+--------------+-----------+

18. Find customers who have not placed any orders.
mysql> SELECT * FROM Customers_012
	-> WHERE customer_id NOT IN (SELECT DISTINCT customer_id FROM Orders_012);
Empty set 

19. Show All Orders Placed in the Last 30 Days
mysql> SELECT * FROM Orders_012
	-> WHERE order_date >= CURDATE() - INTERVAL 30 DAY;
Empty set 

20. Find Orders Where the Total Amount is an Exact Multiple of 100
mysql> SELECT * FROM Orders_012
	-> WHERE total_amount % 100 = 0;
+----------+-------------+------------+--------------+-----------+
| order_id | customer_id | order_date | total_amount | status	|
+----------+-------------+------------+--------------+-----------+
|    	2 |       	2 | 2024-02-05 |   	500.00 | Pending   |
|    	5 |       	5 | 2024-01-25 |  	1200.00 | Completed |
+----------+-------------+------------+--------------+-----------+
